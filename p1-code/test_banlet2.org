#+TITLE: Problem 2 print_fontified, load_font, slurp_file
#+TESTY: PREFIX="prob2"
#+TESTY: USE_VALGRIND=1

* print_fontified_1
#+TESTY: program='./test_banlet_funcs print_fontified_1'
#+BEGIN_SRC sh
IF_TEST("print_fontified_1") { 
    // Tests print_fontified_linebreak function with builtin font_standard
    char *string;
    string =
"apple\n\
B@N@N@\n\
Carr0^";
    print_fontified(string, &font_standard);
}
---OUTPUT---
                     ,-,      
  __ _ ,_ __. ,_ __. | |  ___ 
 / _` || '_ \ | '_ \ | | /'_`\
| (_| || |_) || |_) || ||  __/
 \__,_|| .__/ | .__/ |_| \___|
       |_|    |_|             
,____    ____  ._  ._.   ____  ._  ._.   ____  
| |= )  / __ \ | \ | |  / __ \ | \ | |  / __ \ 
|  _ \ / / _` ||  \| | / / _` ||  \| | / / _` |
| |_)|| | (_| || |\  || | (_| || |\  || | (_| |
|____/ \ \__,.||_| \_| \ \__,.||_| \_| \ \__,.|
        \____/          \____/          \____/ 
  ____.                     ___   /\ 
 / ___|  __ _ ._ __.._ __. / _ \ |/\|
| |     / _` || `__|| `__|| | | |    
| |___.| (_| || |   | |   | |_| |    
 \____| \__,_||_|   |_|    \___/     
                                     
#+END_SRC

* print_fontified_2
#+TESTY: program='./test_banlet_funcs print_fontified_2'
#+BEGIN_SRC sh
IF_TEST("print_fontified_2") { 
    // Tests print_fontified_linebreak function with builtin font_standard
    char *string;
    string =
"The quick brown fox\n\
jumps OVER the lazy\n\
dog.";
    print_fontified(string, &font_standard);
}
---OUTPUT---
._____. _                                    ,_,     ._.                                       __              
|_   _|| |__    ___     __ _.._. ._.(`)  ___.| | __  | |__  ._ __.  ___  __      __.,_ __.    / _|  ___  __  __
  | |  | '_ \  /'_`\   / _` || | | ||'| / __|| |/ /  | '_ \ | `__| / _ \ \ \ /\ / / | '_ \   | |_  / _ \ \ \/ /
  | |  | | | ||  __/  | (_| || |_| || || (__ |   <   | |_) || |   | (_) | \ V  V /  | | | |  |  _|| (_) | >  < 
  |_|  |_| |_| \___|   \__, | \__,_||_| \___||_|\_\  |_.__/ |_|    \___/   \_/\_/   |_| |_|  |_|   \___/ /_/\_\
                          |_|                                                                                  
                                       ___  __     __._____..____.   ._.   _             ,-,                   
  (`)._. ._.,_ __ ___. ,_ __.  ___.   / _ \ \ \   / /| ,___||  _ \   | |_.| |__    ___   | |  __ _ .____._. ._.
  |'|| | | || '_ ` _ \ | '_ \ / __|  | | | | \ \ / / | |==  | |_) )  | __|| '_ \  /'_`\  | | / _` ||_  /| | | |
  | || |_| || | | | | || |_) |\__ \  | |_| |  \ V /  | |___.|  _-^.  | |_ | | | ||  __/  | || (_| | / / | |_| |
 _/ | \__,_||_| |_| |_|| .__/ |___/   \___/    \_/   |_____||_| \_\   \__||_| |_| \___|  |_| \__,_|/___\ \__, |
|__/                   |_|                                                                               |___/ 
     _                  
  __| |  ___    __ _    
 / _, | / _ \  / _` |   
| (_| || (_) || (_| | _ 
 \__,_| \___/  \__, |(_)
               |___/'    
#+END_SRC

* print_fontified_3
#+TESTY: program='./test_banlet_funcs print_fontified_3'
#+BEGIN_SRC sh
IF_TEST("print_fontified_3") { 
    // Tests print_fontified_linebreak function with builtin font_standard
    char *string;
    string =
" !\"#$%&'()\n\
*+,-./0123\n\
456789:;<=\n\
>?@ABCDEFG\n\
HIJKLMNOPQ\n\
RSTUVWXYZ[\n\
\\]^_`abcde\n\
fghijklmno\n\
pqrstuvwxy\n\
z{|}~";
    print_fontified(string, &font_standard);
}
---OUTPUT---
  ._. _ _   ._.._.    ._.     __  ___    _   ____  
  | |( | )._| || |_. | | () / / ( _ )  ( ) / /\ \ 
  | | V V |_  ..  _|/ __)  / /  / _ \/\|/ | |  | |
  |_|     |_      _|\__ \ / /  | (_>  <   | |  | |
  (_)       |_||_|  (   //_/ () \___/\/   | |  | |
                     |_|                   \_\/_/ 
    A                            __  ___   _  ____   _____ 
.__/ \__.  ._.                  / / / _ \ / ||___ \ |___ / 
 \     / ._| |_.   ._____.     / / | | | || |  __) |  |_ \ 
 /_. ._\ |_   _| _ |_____| _  / /  | |_| || | / __/  ___) |
'   V  `   |_|  ( )       (_)/_/    \___/ |_||_____||____/ 
                |/                                         
 _  _    ____    __    _____   ___    ___          __       
| || |  | ___|  / /_  |___  | ( _ )  / _ \  _  _  / / _____ 
| || |_ |___ \ | '_ \    / /  / _ \ | (_) |(_)(_)/ / |_____|
|__   _| ___) || (_) |  / /  | (_) | \__, | _  _ \ \ |_____|
   |_|  |____/  \___/  /_/    \___/    /_/ (_)( ) \_\       
                                              |/            
__   ___    ____      _    ,____   ____..____  ._____. _____   ____.
\ \ |__ \  / __ \    / \   | |= ) / ___||  _ \ | ,___||  ___|,/ ___|
 \ \  / / / / _` |  / ^ \  |  _ \| |    | | | || |==  | |_   | | ,_.
 / / |_| | | (_| | / ___ \ | |_)|| |___.| |_| || |___.|  _|  | |_| |
/_/  (_)  \ \__,.|/_/   \_\|____/ \____||____/ |_____||_|     \____|
           \____/                                                   
._. ._..___.    ._.._. __ _     .__  __.._  ._.  ___  .____.   ___  
| | | ||_ _|    | || |/ /| |    |  \/  || \ | | / _ \ |  _ \  / _ \ 
| |_| | | |  _  | || ' / | |    | |\/| ||  \| || | | || |_) || | | |
|  _  |,| |,| |_| || . \ | |___ | |  | || |\  || |_| ||  __/ | |_| |
|_| |_||___| \___/ |_|\_\|_____||_|  |_||_| \_| \___/ |_|     \__`\|
                                                                    
.____.  ____. ._____.._. ._.__     ___.        .___  ____   __._____.__.
|  _ \ / ___| |_   _|| | | |\ \   / /\ \      / /\ \/ /\ \ / /|__  /| _|
| |_) )\___ \   | |  | | | | \ \ / /  \ \ /\ / /  \  /  \ V /   / / | | 
|  _-^..___) |  | |  | |_| |  \ V /    \ V  V /   /  \   | |   / /_ | | 
|_| \_\|____/   |_|   \___/    \_/      \_/\_/   /_/\_\  |_|  /____|| | 
                                                                    |__|
__    .__. /\         _        ._.               _       
\ \   |_ ||/\|       ( )  __ _ | |__    ___.  __| |  ___ 
 \ \   | |            \| / _` || '_ \  / __| / _, | /'_`\
  \ \  | |              | (_| || |_) || (__ | (_| ||  __/
   \_\ | |     _____     \__,_||_.__/  \___| \__,_| \___|
      |__|    |_____|                                    
  __         _             ,_,   ,-,                         
 / _|  __ _ | |__  (`)  (`)| | __| |,_ __ ___. ,_ __.   ___  
| |_  / _` || '_ \ |'|  |'|| |/ /| || '_ ` _ \ | '_ \  / _ \ 
|  _|| (_| || | | || |  | ||   < | || | | | | || | | || (_) |
|_|   \__, ||_| |_||_| _/ ||_|\_\|_||_| |_| |_||_| |_| \___/ 
      |___/'           |__/                                   
                         ._.                                        
,_ __.   __ _.._ __. ___.| |_.._. ._.__.  ____      __.__  __._. ._.
| '_ \  / _` || `__|/ __|| __|| | | |\ \ / /\ \ /\ / / \ \/ /| | | |
| |_) || (_| || |   \__ \| |_ | |_| | \ V /  \ V  V /   >  < | |_| |
| .__/  \__, ||_|   |___/ \__| \__,_|  \_/    \_/\_/   /_/\_\ \__, |
|_|        |_|                                                |___/ 
        __ _ __    /\/|
.____  / /| |\ \  |/\/ 
|_  / | | | | | |      
 / / < <  | |  > >     
/___\ | | | | | |      
       \_\|_|/_/       
#+END_SRC

* load_font_1
#+TESTY: program='./test_banlet_funcs load_font_1'
#+BEGIN_SRC sh
IF_TEST("load_font_1") { 
    // Tests load_font() on the font_alternate.txt file
    // ALSO checks that free_font() function deallocates.
    char *font_file = "data/font_alternate.txt";
    font_t *font = font_load(font_file);
    char *string =
" !\"#$%&'()\n\
*+,-./0123\n\
456789:;<=\n\
>?@ABCDEFG\n\
HIJKLMNOPQ\n\
RSTUVWXYZ[\n\
\\]^_`abcde\n\
fghijklmno\n\
pqrstuvwxy\n\
z{|}~";
    print_fontified(string, font);
    font_free(font);
}
---OUTPUT---
   _  _ _    _  _     _   _  __  ___    _   ____  
  | |( | ) _| || |_  | | (_)/ / ( _ )  ( ) / /\ \ 
  | | V V |_  ..  _|/ __)  / /  / _ \/\|/ | |  | |
  |_|     |_      _|\__ \ / /_ | (_>  <   | |  | |
  (_)       |_||_|  (   //_/(_) \___/\/   | |  | |
                     |_|                   \_\/_/ 
                              __  ___   _  ____  ._____ 
__/\__   _                   / / / _ \ / ||___ \ |___ / 
\    / _| |_     _____      / / | | | || |  __) |  |_ \ 
/_  _\|_   _| _ |_____| _  / /  | |_| || | / __/  ___) |
  \/    |_|  ( )       (_)/_/    \___/ |_||_____||____/ 
             |/                                         
 _  _   .____    __   ._____   ___    ___          __       
| || |  | ___|  / /_  |___  | ( _ )  / _ \  _  _  / / _____ 
| || |_ |___ \ | '_ \    / /  / _ \ | (_) |(_)(_)/ / |_____|
|__   _| ___) || (_) |  / /  | (_) | \__, | _  _ \ \ |_____|
   |_|  |____/  \___/  /_/    \___/    /_/ (_)( ) \_\       
                                              |/            
__   ___    ____      _     ____    ____ .____  ._____.._____   ____ 
\ \ |__ \  / __ \    / \   | __ )  / ___||  _ \ | ____||  ___| / ___|
 \ \  / / / / _` |  / _ \  |  _ \ | |    | | | || +==| |_   | |  _ 
 / / |_| | | (_| | / ___ \ | |_) || |___ | |_| || |___ |  _|  | |_| |
/_/  (_)  \ \__,_|/_/   \_\|____/  \____||____/ |_____||_|     \____|
           \____/                                                    
 _   _  ___      _  _  __ _      __  __  _   _   ___   ____    ___  
| | | ||_ _|    | || |/ /| |    |  \/  || \ | | / _ \ |  _ \  / _ \ 
| |_| | | |  _  | || ' / | |    | |\/| ||  \| || | | || |_) || | | |
|  _  | | | | |_| || . \ | |___ | |  | || |\  || |_| ||  __/ | |_| |
|_| |_||___| \___/ |_|\_\|_____||_|  |_||_| \_| \___/ |_|     \__\_\
                                                                    
 ____   ____   _____  _   _ __     ____        ____  ____   __ _____ __ 
|  _ \ / ___| |_   _|| | | |\ \   / /\ \      / /\ \/ /\ \ / /|__  /| _|
| |_) |\___ \   | |  | | | | \ \ / /  \ \ /\ / /  \  /  \ V /   / / | | 
|  _ <  ___) |  | |  | |_| |  \ V /    \ V  V /   /  \   | |   / /_ | | 
|_| \_\|____/   |_|   \___/    \_/      \_/\_/   /_/\_\  |_|  /____|| | 
                                                                    |__|
__     __  /\         _         _                _       
\ \   |_ ||/\|       ( )  __ _ | |__    ___   __| |  ___ 
 \ \   | |            \| / _` || '_ \  / __| / _` | / _ \
  \ \  | |              | (_| || |_) || (__ | (_| ||  __/
   \_\ | |     _____     \__,_||_.__/  \___| \__,_| \___|
      |__|    |_____|                                    
  __         _      _    _  _     _                          
 / _|  __ _ | |__  (_)  (_)| | __| | _ __ ___   _ __    ___  
| |_  / _` || '_ \ | |  | || |/ /| || '_ ` _ \ | '_ \  / _ \ 
|  _|| (_| || | | || |  | ||   < | || | | | | || | | || (_) |
|_|   \__, ||_| |_||_| _/ ||_|\_\|_||_| |_| |_||_| |_| \___/ 
      |___/           |__/                                   
                          _                                        
 _ __    __ _  _ __  ___ | |_  _   _ __   ____      ____  __ _   _ 
| '_ \  / _` || '__|/ __|| __|| | | |\ \ / /\ \ /\ / /\ \/ /| | | |
| |_) || (_| || |   \__ \| |_ | |_| | \ V /  \ V  V /  >  < | |_| |
| .__/  \__, ||_|   |___/ \__| \__,_|  \_/    \_/\_/  /_/\_\ \__, |
|_|        |_|                                               |___/ 
        __ _ __    /\/|
 ____  / /| |\ \  |/\/ 
|_  / | | | | | |      
 / / < <  | |  > >     
/___| | | | | | |      
       \_\|_|/_/       
#+END_SRC

* load_font_2
#+TESTY: program='./test_banlet_funcs load_font_2'
#+BEGIN_SRC sh
IF_TEST("load_font_2") { 
    // Tests load_font() on the font_mini.txt file
    // ALSO checks that free_font() function deallocates.
    char *font_file = "data/font_mini.txt";
    font_t *font = font_load(font_file);
    char *string =
" !\"#$%&'()\n\
*+,-./0123\n\
456789:;<=\n\
>?@ABCDEFG\n\
HIJKLMNOPQ\n\
RSTUVWXYZ[\n\
\\]^_`abcde\n\
fghijklmno\n\
pqrstuvwxy\n\
z{|}~";
    print_fontified(string, font);
    font_free(font);
}
---OUTPUT---
            _          
  |||-|-|-(| O/() / /\ 
  o  -|-|-_|)/O(_X |  |
                    \/ 
             _   _ _ 
\|/_|_ __  // \/| )_)
/|\ | o  o/ \_/ |/__)
      /              
     _  _ __ _  _      
|_|_|_ |_  /(_)(_|oo/--
  |  _)|_)/ (_)  |oo\--
                   /   
 _   __      _  _ _  _ _ __
\ ) /  \ /\ |_)/ | \|_|_/__
/o | (|//--\|_)\_|_/|_| \_|
    \__                    
   ___                _  _  _ 
|_| |   ||/| |\/||\ |/ \|_)/ \
| |_|_\_||\|_|  || \|\_/|  \_X
                              
 _  _____                  __ _
|_)(_  | | |\  /\    /\/\_/ /| 
| \__) | |_| \/  \/\/ /\ | /_|_
                               
  _ /\                 
\  |    \ _.|_  _ _| _ 
 \_|     (_||_)(_(_|(/_
      __               
  _                       
_|_ _ |_ o o| |._ _ ._    
 | (_|| || ||<|| | || |(_)
    _|    _|              
                          
._  _.._ __|_             
|_)(_|| _> |_|_|\/\/\/><\/
|    |                  / 
   ,-|-. /\/
_ _| | |_   
/_ | | |    
   `-|-'    
#+END_SRC

* load_font_3
#+TESTY: program='./test_banlet_funcs load_font_3'
#+BEGIN_SRC sh
IF_TEST("load_font_3") { 
    // Tests load_font() on the font_capsonly.txt file.
    // This font does not have all ASCII codepoints defined
    // so some of the glyphs will appear as defaults / XXXs.
    char *font_file = "data/font_capsonly.txt";
    font_t *font = font_load(font_file);
    char *string =
" ! \" # $ % & ' ( )\n\
+ * , - . / 0 1 2 3\n\
4 5 6 7 8 9 : ; < =\n\
> ? @ A B C D E F G\n\
H I J K L M N O P Q\n\
R S T U V W X Y Z [\n\
\\ ] ^ _ ` a b c d e\n\
f g h i j k l m n o\n\
p q r s t u v w x y\n\
z { | } ~";
    print_fontified(string, font);
    font_free(font);
}
---OUTPUT---
   _   34XXXX  35XXXX  36XXXX  37XXXX  38XXXX  39XXXX  40XXXX  41XXXX
  | |  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
  | |  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
  |_|  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
  (_)  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
       XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
43XXXX  42XXXX  44XXXX  45XXXX  46XXXX  47XXXX  48XXXX  49XXXX  50XXXX  51XXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
52XXXX  53XXXX  54XXXX  55XXXX  56XXXX  57XXXX       59XXXX  60XXXX  61XXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX   _   XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  (_)  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX   _   XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  (_)  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX       XXXXXX  XXXXXX  XXXXXX
62XXXX  63XXXX  64XXXX      _      .____      ____.  .____    ._____.  ._____.    ____.
XXXXXX  XXXXXX  XXXXXX     / \     | __ )    / ___|  |  _ \   | ____|  |  ___|   / ___|
XXXXXX  XXXXXX  XXXXXX    / _ \    |  _ \   | |      | | | |  |  _|    | |_     | |  _.
XXXXXX  XXXXXX  XXXXXX   / ___ \   | |_) |  | |___.  | |_| |  | |___   |  _|    | |_| |
XXXXXX  XXXXXX  XXXXXX  /_/   \_\  |____/    \____|  |____/   |_____|  |_|       \____|
XXXXXX  XXXXXX  XXXXXX                                                                 
 _   _    ___        _    _  __   _        __  __    _   _     ___     ____      ___  
| | | |  |_ _|      | |  | |/ /  | |      |  \/  |  | \ | |   / _ \   |  _ \    / _ \ 
| |_| |   | |    _  | |  | ' /   | |      | |\/| |  |  \| |  | | | |  | |_) |  | | | |
|  _  |   | |   | |_| |  | . \   | |___   | |  | |  | |\  |  | |_| |  |  __/   | |_| |
|_| |_|  |___|   \___/   |_|\_\  |_____|  |_|  |_|  |_| \_|   \___/   |_|       \__\_\
                                                                                      
 ____     ____     _____    _   _   __     __  __        __  __  __  __   __   _____  91XXXX
|  _ \   / ___|   |_   _|  | | | |  \ \   / /  \ \      / /  \ \/ /  \ \ / /  |__  /  XXXXXX
| |_) |  \___ \     | |    | | | |   \ \ / /    \ \ /\ / /    \  /    \ V /     / /   XXXXXX
|  _ <    ___) |    | |    | |_| |    \ V /      \ V  V /     /  \     | |     / /_   XXXXXX
|_| \_\  |____/     |_|     \___/      \_/        \_/\_/     /_/\_\    |_|    /____|  XXXXXX
                                                                                      XXXXXX
92XXXX  93XXXX  94XXXX  95XXXX  96XXXX  97XXXX  98XXXX  99XXXX  100XXX  101XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
102XXX  103XXX  104XXX  105XXX  106XXX  107XXX  108XXX  109XXX  110XXX  111XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
112XXX  113XXX  114XXX  115XXX  116XXX  117XXX  118XXX  119XXX  120XXX  121XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
122XXX  123XXX  124XXX  125XXX  126XXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
XXXXXX  XXXXXX  XXXXXX  XXXXXX  XXXXXX
#+END_SRC

* load_font_fail
#+TESTY: program='./test_banlet_funcs load_font_fail'
#+BEGIN_SRC sh
IF_TEST("load_font_fail") { 
    // Tests that load_font() returns NULL if font is not found
    char *font_file = "data/no_such_font.txt.txt";
    font_t *font = font_load(font_file);
    if(font != NULL){
      printf("What the deuce just happened?\n");
    }
    else{
      printf("NULL returned correctly\n");
    }
}
---OUTPUT---
NULL returned correctly
#+END_SRC

* slurp_file_1
#+TESTY: program='./test_banlet_funcs slurp_file_1'
#+BEGIN_SRC sh
IF_TEST("slurp_file_1") { 
    // Print contents of a text file using slurp_file().
    // Single line file
    char *text_file = "data/asimov.txt";
    char *text = slurp_file(text_file);
    printf("%s",text);
    free(text);
}
---OUTPUT---
I do not fear computers. I fear the lack of them. -Asimov
#+END_SRC

* slurp_file_2
#+TESTY: program='./test_banlet_funcs slurp_file_2'
#+BEGIN_SRC sh
IF_TEST("slurp_file_2") { 
    // Print contents of a text file using slurp_file().
    // Multi-line file
    char *text_file = "data/bruce.txt";
    char *text = slurp_file(text_file);
    printf("%s",text);
    free(text);
}
---OUTPUT---
It is not a daily
increase,
but a daily
decrease.
Hack away at the
inessentials.
--Bruce Lee
#+END_SRC

* slurp_file_fail
#+TESTY: program='./test_banlet_funcs slurp_file_fail'
#+BEGIN_SRC sh
IF_TEST("slurp_file_fail") { 
    // Ensure slurp_file() returns NULL on failing to open a file
    char *text_file = "data/no_such_file.txt";
    char *text = slurp_file(text_file);
    if(text != NULL){
      printf("What the deuce just happened?\n");
    }
    else{
      printf("NULL returned correctly\n");
    }
}
---OUTPUT---
NULL returned correctly
#+END_SRC

